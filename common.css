* {
    text-decoration: none;
    font-family: system-ui;
    list-style: none;
}

:root {
    * {
        box-sizing: border-box;
    }

    /* irrespective of color theme */
    --my-accent-blue: rgb(56, 114, 186);
    --my-accent-purple: rgb(125, 55, 186);

    --my-background: rgb(31, 31, 31);

    --nav-color: var(--my-background);
    --primary: var(--my-accent-blue);
    --accent: var(--my-accent-purple);

    /* set by color theme */
    /* --foreground */
    /* --background */
    /* --outline-thickness */

    --my-purple: rgb(143, 132, 215);
    --my-blue: rgb(56, 114, 186);

    --accent-hovered: color-mix(in srgb, var(--my-purple) 80%, white);
    --accent-selected: var(--my-purple);

    --half-padding: 25px;
    --padding: 50px;

    --nav-width: 200px;
    --header-height: 75px;
    
    --logo-height: calc(var(--header-height) / 1.5);
    --logo-gap: calc(var(--header-height) / 4);
}

nav {
    position: fixed;
    top: var(--header-height);
    display: flex;
    flex-direction: column;
    flex: 1;
    flex-grow: 1;
    flex-shrink: 0;
    line-height: 2;
    height: 100%;
    width: var(--nav-width);
    background: var(--nav-color);
    color: var(--background);
    z-index: 100;
}

.nav-radio {
    display: flex;
    flex-direction: row;
    padding-right: 10px;

    > input {
        appearance: none;
        position: absolute;
        width: 100%;
        height: 100%;
    }

    > label {
        padding-left: 30px;
    }
}


.nav-radio:has(> input[type="radio"]:checked) {
    background: var(--accent-selected);
    transition: background-color 500ms;
}

/* .nav-radio:has(> input[type="radio"]:checked)::before {
    content: "";
    position: relative;
    height: 30px;
    width: 5px;
    vertical-align: middle;
    border-radius: 50%;
    background-color: white;
    color: var(--foreground);
    padding-right: -10px;
    padding-left: 10px;
} */


.nav-radio:hover {
    background: var(--accent-hovered);
    transition: background-color 200ms;
}

article {
    position: relative;
    top: var(--header-height);
    left: var(--nav-width);

    width: calc(100vw - var(--nav-width));

    padding: var(--padding);
}

footer {
    border-top: var(--outline-thickness) solid var(--primary);
    transition: border-color 500ms;
}

section, .subitem {
    border: var(--outline-thickness) solid var(--primary);
    transition: border-color 500ms;
}


footer:hover {
    border-top: var(--outline-thickness) solid var(--accent);
    transition: border-color 500ms;
}


/* have to distinguish hovering parent vs child frame */
section:not(:has(.subitem:hover)):hover {
    border: var(--outline-thickness) solid var(--accent);
    transition: border-color 500ms;
}

section > .subitem:not(:has(img:hover)):hover {
    border: var(--outline-thickness) solid var(--accent);
    transition: border-color 500ms;
}

/* img:not(:has(.subitem:hover)):hover {
    border-color: var(--accent);
} */

/* .subitem {
    h1, h2, h3, p, ul {
        width: 90%;
        margin-left: auto;
        margin-right: auto;
    }
} */

hr {
    border-top: 0px;
    border-left: 0px;
}

h1, h2, h3, .nudge-up {
    transform: translateY(-10px);
}

.force-up {
    margin-top: -10px;
}

html {
    height: 100%;
}

body {
    font-weight: lighter;
    margin: 0;
    padding: 0;

    background-color: var(--background);
    color: var(--foreground);

    display: flex;
    flex-direction: column;
    height: 100%;
}

.main {
    width: 70%;
    margin: auto;
}

.dummy {
    flex: 1;
}

/* TODO: this is probably not necessary for anything */
@media screen and (prefers-color-scheme: dark) {
    
}

.logo-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--logo-gap);
    padding-left: var(--logo-gap);

    img {
        aspect-ratio: 1 / 1;
        height: var(--logo-height);
        border-radius: 50%;
        border: 1px solid white;
    }

    a {
        margin-bottom: 0;
    }
}

img {
    border: var(--outline-thickness) solid var(--primary);
    box-shadow: 0 0 1em #000a;
}

.toggle {
    aspect-ratio: 1 / 1;
    height: var(--logo-height);

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    position: relative;

    p {
        font-size: x-small;
        transform: translateY(-2.5em);
        color: white;
    }

    button {
        position: absolute;
        border-radius: 10px;
        aspect-ratio: calc(1 / 1);
        height: 30%;
    }
}

header {
    background: var(--nav-color);
    color: var(--background);

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    text-align: center;

    position: fixed;
    width: 100%;
    top: 0;
    /* FIXME: is the following minimum even necessary? */
    min-height: var(--header-height);
    height: var(--header-height);
}

footer {
    background: var(--nav-color);
    color: white;
    text-align: center;
    padding: 15px 0;
    position: relative;
    bottom: 0;
    width: 100%;
}

.main {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 30px 0;
}

section {
    padding: 20px;
    margin: 20px 0;
    border-radius: 10px;
    max-width: 800px;
    width: 100%;
    text-align: center;
}

.shadowed {
    box-shadow:0 0 1em #000a;
}

.vstack {
    display: flex;
    flex-direction: column;
    line-height: 2;
}

.hstack {
    display: flex;
    flex-direction: row;
}

.shrink {
    flex-shrink: 1;
}

.title {
    font-size: 30pt;
    align-items: center;
    margin-top: -10px;
    margin-bottom: 10px;
    line-height: 1;
}

.pad-top {
    margin-top: var(--padding);
}

.halfpad-top {
    margin-top: var(--half-padding);
}

.headshot {
    height: 100%;
    width: 100%;
}

.grid {
    display: grid;
    /* make 2 columns, 2 rows for left column only */
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    gap: var(--padding);
}

.grid-topleft {
    /* set as column 0, row 0 */
    grid-column: 1;
    grid-row: 1;
}

.grid-bottomleft {
    /* set as column 0, row 1 */
    grid-column: 1;
    grid-row: 2;
}

.grid-right {
    /* set as column 1, 2 rows tall */
    grid-column: 2;
    grid-row: 1 / 3;
}

/* box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 2px, rgba(0, 0, 0, 0.07) 0px 2px 4px, rgba(0, 0, 0, 0.07) 0px 4px 8px, rgba(0, 0, 0, 0.07) 0px 8px 16px, rgba(0, 0, 0, 0.07) 0px 16px 32px, rgba(0, 0, 0, 0.07) 0px 32px 64px; */

.subitem {
    padding: var(--half-padding);
    /* border-radius:10px; */
    /* margin: 10px; */
}

.darken-98 {
    background-color: color-mix(in srgb, var(--background) 98%, black);
}

.darken-95 {
    background-color: color-mix(in srgb, var(--background) 95%, black);
}

.left-list {
    text-align: right;
    font-weight: bolder;
}

.right-list {
    text-align: left;
    font-weight: lighter;
}